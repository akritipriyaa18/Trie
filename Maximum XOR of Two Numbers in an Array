Question Link ---> https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/

nums = [3,10,5,25,2,8]

Steps:
->Insert all the elements into the trie.
->Take x and find the max no from array where (no ^ x).

//code
struct Node{
    Node* arr[2];
    bool flag;
     
    bool contains(int bit)
    {
        return (arr[bit] != NULL);
    }
    
    void put(int bit , Node* newNode)
    {
        arr[bit] = newNode;
    }
    
    Node* getNext(int bit)
    {
        return arr[bit];
    }
    
};

class Trie {
    Node* root = new Node();
public:
    Trie() {
        
    }
    
    void insert(int num) {
        Node* temp = root;
        for(int i = 31; i >= 0; i--)
        {
            int bit = (num >> i) & 1;
            if(!temp->contains(bit))
            {
                Node* newNode = new Node();
                temp->put(bit , newNode);
            }
            temp = temp->getNext(bit);
        }
    }
    
    int maximum(int num)
    {
        Node* temp = root;
        int maxNum = 0;
         for(int i = 31; i >= 0; i--)
        {
            int bit = (num >> i) & 1;
            if(temp->contains(1 - bit))
            {
                maxNum = maxNum | (1 << i);
                temp = temp->getNext(1 - bit);
            }
             else{
                 temp = temp->getNext(bit);
             } 
        }
        return maxNum;
    }
